{#
 * ---------------------------------------------------------------------
 * GLPI - Gestionnaire Libre de Parc Informatique
 * Copyright (C) 2015-2018 Teclib' and contributors.
 *
 * http://glpi-project.org
 *
 * based on GLPI - Gestionnaire Libre de Parc Informatique
 * Copyright (C) 2003-2014 by the INDEPNET Development Team.
 *
 * ---------------------------------------------------------------------
 *
 * LICENSE
 *
 * This file is part of GLPI.
 *
 * GLPI is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * GLPI is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GLPI. If not, see <http://www.gnu.org/licenses/>.
 * ---------------------------------------------------------------------
 #}

{% set main_header = main_header|default(false) %}
{% set form_header = form_header|default(false) %}

<div class="content">
   <div class="box box-default">
{% if main_header %}
      <div class="box-header with-border">
         <h3 class="box-title">{{ __('Search %1$s')|format(item.getTypeName()|lower)}}</h3>
         <div class="box-tools pull-right">
            <a href="#" id="as_map" class="btn btn-sm btn-default" title="{{ __('Show as map') }}">
               <i class="fa fa-globe-americas"></i>
               <span class="sr-only">{{ __s('Show as map') }}</span>
            </a>
   {% if item.maybeDeleted() %}
            <a href="#" id="is_deleted" class="btn btn-sm btn-default" title="{{ __s('Show items in dustbin') }}">
               <i class="fa fa-trash"></i>
               <span class="sr-only">{{ __s('Show items in dustbin') }}</span>
            </a>
   {% endif %}
            <button id="toggle_search_criteria" type="button" class="btn btn-sm btn-primary" title="{{ __s('Display/hide search panel') }}">
               <i class="fa fa-search"></i>
               <span class="sr-only">{{ __s('Display/hide search panel') }}</span>
            </button>
            <button id="default_items" type="button" class="btn btn-default btn-sm" title="{{ __s('Select default items to show') }}">
               <i class="fa fa-wrench"></i>
               <span class="sr-only">{{ __s('Select default items to show') }}</span>
            </button>
            <div class="btn-group">
               <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown">
                  <i class="fa fa-download"></i><span class="sr-only">{{ __('Download') }}</span>&nbsp;<span class="fa fa-caret-down"></span>
               </button>
               <ul class="dropdown-menu">
                  <li><a href="{#{Search::PDF_OUTPUT_LANDSCAPE}#}">{{ __('Current page in landscape PDF') }}</a></li>
                  <li><a href="{#{Search::PDF_OUTPUT_PORTRAIT}#}">{{ __('Current page in portrait PDF') }}</a></li>
                  <li><a href="{#{Search::SYLK_OUTPUT}#}">{{ __('Current page in SLK') }}</a></li>
                  <li><a href="{#{Search::CSV_OUTPUT}#}">{{ __('Current page in CSV') }}</a></li>
                  <li><a href="{#{'-'.Search::PDF_OUTPUT_LANDSCAPE}#}">{{ __('All pages in landscape PDF') }}</a></li>
                  <li><a href="{#{'-'.Search::PDF_OUTPUT_PORTRAIT}#}">{{ __('All pages in portrait PDF') }}</a></li>
                  <li><a href="{#{'-'.Search::SYLK_OUTPUT}#}">{{ __('All pages in SLK') }}</a></li>
                  <li><a href="{#{'-'.Search::CSV_OUTPUT}#}">{{ __('All pages in CSV') }}</a></li>
               </ul>
            </div><!-- /btn-group -->
         </div><!-- /box-tools -->
      </div><!-- /box-header -->
{% endif %}
      <div class="box-body">
         <form class="form-horizontal" id="search_form" action="{{ path_for('list', {'itemtype': search_data.itemtype }) }}">
{% if form_header %}
            <header id="search_criteria">
               <div class="box-body">
   {% if old_search == false %}
                  <div id="query_builder"></div>
   {% else %}
                  <div class="legacy">
                  {{ search_form|raw }}
                  </div>
   {% endif %}

   {% if old_search == false %}
                  <div>
                     <button type="button" class="btn btn-default">
                        <a href="#" onclick="savesearch.dialog('open'); return false;" class="bookmark_record save" title="{{ __('Save current search') }}">
                           <i class="fa fa-star"></i>
                           <span class="sr-only">{{ __('Save current search') }}</span>
                        </a>
                     </button>
                     <button type="button" class="btn btn-default">
                        <a href="/front/computer.php?reset=reset" title="{{ __('Reset to defaults') }}">
                           <i class="fa fa-undo reset-search"></i>
                           <span class="sr-only">{{ __('Blank') }}</span>
                        </a>
                     </button>
                     <button type="submit" class="btn btn-primary">
                        <i class="fa fa-search"></i>
                        {{ __('Search') }}
                     </button>
                  </div>
   {% endif %}
{#<script type="text/javascript">
         $(function() {
            $('#loadbookmark').dialog({
               modal: true,
               autoOpen: false,
               height: 500,
               width: 1050,
               draggable: true,
               resizeable: true,
               open: function(ev, ui){
               $('#Iframeloadbookmark').attr('src','/front/savedsearch.php?action=load&type=1&_in_modal=1').removeClass('hidden');},title: "Load a saved search"});
         });
            </script><a href="#" onclick="savesearch.dialog('open'); return false;" class="fa fa-star bookmark_record save" title="Save current search"><span class="sr-only">Save current search</span></a><script type="text/javascript">
var savesearch;$(function() {savesearch=$('<div />').dialog({

         width:800,

         autoOpen: false,

         height:400,

         modal: true,

         title: "Save current search",

         open: function (){
            var fields = {};
            $(this).load('/ajax/savedsearch.php?action=create&itemtype=Computer&type=1&url=%2Fpublic%2Findex.php%2FComputer%2Flist%3Fquery_builder_rule_0_filter%3Dview%26query_builder_rule_0_operator%3Dcontains%26query_builder_rule_0_value_0%3D%26is_deleted%3D0%26as_map%3D0%26criteria%255B0%255D%255Bfield%255D%3Dview%26criteria%255B0%255D%255Bsearchtype%255D%3Dcontains%26criteria%255B0%255D%255Bvalue%255D%3D%26search%3DSearch%26itemtype%3DComputer%26start%3D0%26_glpi_csrf_token%3De26e05e67ea806606b01bedd219e5d3c', fields);
         }
      });
});</script>#}

               </div>
               <!-- /.box-body -->
            </header>
{% endif %}
            <div class="mailbox-controls">
               <div class="pull-right">
                  {{ __('%1$s-%2$s/%3$s')|format(
                     search_data.search.start + search_data.data.begin + 1,
                     search_data.search.start + search_data.data.end + 1,
                     search_data.data.totalcount
                  ) }}
                  {#{{ __('From %1$d to %2$d of %3$d')|format() }} , $current_start, $current_end, $numrows); #}
                  <div class="btn-group">
                        <a
                           class="btn btn-default btn-sm"
                           href="{% if search_data.pagination.previous_page == false %}#{% else %}{{ path_for('list', {'itemtype': search_data.itemtype, 'page': search_data.pagination.previous_page}) }}{% endif %}"
                           title="{{ __("Previous page (%1$s)")|format(search_data.pagination.previous_page) }}"
                        >
                           <i class="fa fa-chevron-left"></i>
                           <span class="sr-only">{{ __("Previous page (%1$s)")|format(search_data.pagination.previous_page) }}</span>
                        </a>
                        <a
                           class="btn btn-default btn-sm"
                           href="{% if search_data.pagination.next_page == false %}#{% else %}{{ path_for('list', {'itemtype': search_data.itemtype, 'page': search_data.pagination.next_page}) }}{% endif %}"
                           title="{{ __("Next page (%1$s)")|format(search_data.pagination.next_page) }}"
                        >
                           <i class="fa fa-chevron-right"></i>
                           <span class="sr-only">{{ __("Next page (%1$s)")|format(search_data.pagination.next_page) }}</span>
                        </a>
                  </div>
                  <!-- /.btn-group -->
               <!--label for="dropdown_glpilist_limit">{{ __('Display (number of items)') }}</label-->
               <select name="dropdown_glpilist_limit" id="dropdown_glpilist_limit" class="forSelect2">
                  <option value="10">10</option>
                  <option value="20">20</option>
                  <option value="50">50</option>
                  <option value="100">100</option>
               </select>


               </div>
               <!-- /.pull-right -->
            </div>
            <table class="table table-bordered table-hover table-striped">
               <thead>
                  <tr>
                     <th class="sorting" style="width:1em;">
                        <input type="checkbox" class="checkall"/>
                     </th>
   {% for key, header in search_data.data.cols %}
      {#
               $linkto = '';
               if (!$val['meta']
                  && (!isset($val['searchopt']['nosort'])
                     || !$val['searchopt']['nosort'])) {

                  $linkto = $data['search']['target'].(strpos($data['search']['target'], '?') ? '&amp;' : '?').
                              "itemtype=".$data['itemtype']."&amp;sort=".
                              $val['id']."&amp;order=".
                              (($data['search']['order'] == "ASC") ?"DESC":"ASC").
                              "&amp;start=".$data['search']['start']."&amp;".$globallinkto;
               }
               // Not main itemtype add itemtype to display
               if ($data['itemtype'] != $val['itemtype']) {
                  if (!isset($metanames[$val['itemtype']])) {
                     if ($metaitem = getItemForItemtype($val['itemtype'])) {
                        $metanames[$val['itemtype']] = $metaitem->getTypeName();
                     }
                  }
                  $name = sprintf(__('%1$s - %2$s'), $metanames[$val['itemtype']],
                                 $val["name"]);
               }
               $headers_line .= self::showHeaderItem($data['display_type'],
                                                      $name,
                                                      $header_num, $linkto,
                                                      (!$val['meta']
                                                      && ($data['search']['sort'] == $val['id'])),
                                                      $data['search']['order']);

      #}
      {% set name = header.name %}
      {# prefix by group name (corresponding to optgroup in dropdown) if exists #}
      {% if header.groupname is defined %}
         {% if header.groupname is iterable %}
            {% set name = header.groupname.name ~ ' - ' ~ name  %}
         {% else %}
            {% set name = header.groupname ~ ' - ' ~ name  %}
         {% endif %}
      {% endif %}
                     <th class="sorting">
                        {{ name }}
                     </th>
   {% endfor %}
{#
            // Display column Headers for toview items
            $metanames = [];

            // Add specific column Header
            if (isset($CFG_GLPI["union_search_type"][$data['itemtype']])) {
               $headers_line .= self::showHeaderItem($data['display_type'], __('Item type'),
                                                      $header_num);
            }
            // End Line for column headers
            $headers_line        .= self::showEndLine($data['display_type']);

            $headers_line_top    .= $headers_line;
            if ($data['display_type'] == self::HTML_OUTPUT) {
               $headers_line_bottom .= $headers_line;
            }

            $headers_line_top    .= self::showEndHeader($data['display_type']);
            // $headers_line_bottom .= self::showEndHeader($data['display_type']);

            echo $headers_line_top;
#}
                  </tr>
               </thead>
               <tbody>
{#
            //IMPORTANT FOR ITEMS NAVIGATION
            // Init list of items displayed
            if ($data['display_type'] == self::HTML_OUTPUT) {
               Session::initNavigateListItems($data['itemtype']);
            }
#}
   {% for rowkey, row in search_data.data.rows %}
                  <tr>
                     <td>
                        <input type="checkbox" name="_ids[]" value="{{ row.raw.id }}"/>
                     </td>
      {% for colkey, col in search_data.data.cols %}
      {#
              if (isset($CFG_GLPI["union_search_type"][$data['itemtype']])) {
                  if (!isset($typenames[$row["TYPE"]])) {
                     if ($itemtmp = getItemForItemtype($row["TYPE"])) {
                        $typenames[$row["TYPE"]] = $itemtmp->getTypeName();
                     }
                  }
                  echo self::showItem($data['display_type'], $typenames[$row["TYPE"]],
                                    $item_num, $row_num);
               }
      #}
                     <td>
         {% if not col.meta %}
                        {{ row[colkey].displayname|raw }}
            {#echo self::showItem($data['display_type'], $row[$colkey]['displayname'],
                                          $item_num, $row_num,
                                          self::displayConfigItem($data['itemtype'], $col['id'],
                                                                  $row, $colkey));#}
         {% else %} {# META case #}
                        {{ row[colkey].displayname|raw }}
            {# echo self::showItem($data['display_type'], $row[$colkey]['displayname'],
                                       $item_num, $row_num);#}
                  }
         {% endif %}
                     </td>
      {% endfor %}
                  </tr>
{#
            $typenames = [];
            // Display Loop
            foreach ($data['data']['rows'] as $rowkey => $row) {
               // Column num
               $item_num = 1;
               $row_num++;
               // New line
               echo self::showNewLine($data['display_type'], ($row_num%2),
                                    $data['search']['is_deleted']);

               $current_type       = (isset($row['TYPE']) ? $row['TYPE'] : $data['itemtype']);
               $massiveaction_type = $current_type;

               if (($data['itemtype'] != 'AllAssets')
                  && isset($CFG_GLPI["union_search_type"][$data['itemtype']])) {
                  $massiveaction_type = $data['itemtype'];
               }

               // Add item in item list
               Session::addToNavigateListItems($current_type, $row["id"]);

               if (($data['display_type'] == self::HTML_OUTPUT)
                     && $showmassiveactions) { // HTML display - massive modif
                  $tmpcheck = "";

                  if (($data['itemtype'] == 'Entity')
                        && !in_array($row["id"], $_SESSION["glpiactiveentities"])) {
                     $tmpcheck = "&nbsp;";

                  } else if ($data['itemtype'] == 'User'
                           && !Session::isViewAllEntities()
                           && !Session::haveAccessToOneOfEntities(Profile_User::getUserEntities($row["id"], false))) {
                     $tmpcheck = "&nbsp;";

                  } else if (($data['item'] instanceof CommonDBTM)
                              && $data['item']->maybeRecursive()
                              && !in_array($row["entities_id"], $_SESSION["glpiactiveentities"])) {
                     $tmpcheck = "&nbsp;";

                  } else {
                     $tmpcheck = Html::getMassiveActionCheckBox($massiveaction_type,
                                                               $row[$massiveaction_field]);
                  }
                  echo self::showItem($data['display_type'], $tmpcheck, $item_num, $row_num,
                                       "width='10'");
               }

               // Print other toview items
               foreach ($data['data']['cols'] as $colkey => $col) {
                  if (!$col['meta']) {
                     echo self::showItem($data['display_type'], $row[$colkey]['displayname'],
                                          $item_num, $row_num,
                                          self::displayConfigItem($data['itemtype'], $col['id'],
                                                                  $row, $colkey));
                  } else { // META case
                     echo self::showItem($data['display_type'], $row[$colkey]['displayname'],
                                       $item_num, $row_num);
                  }
               }

               if (isset($CFG_GLPI["union_search_type"][$data['itemtype']])) {
                  if (!isset($typenames[$row["TYPE"]])) {
                     if ($itemtmp = getItemForItemtype($row["TYPE"])) {
                        $typenames[$row["TYPE"]] = $itemtmp->getTypeName();
                     }
                  }
                  echo self::showItem($data['display_type'], $typenames[$row["TYPE"]],
                                    $item_num, $row_num);
               }
               // End Line
               echo self::showEndLine($data['display_type']);
            }
#}
   {% else %}
                  <tr>
                     <td colspan="{{ search_data.data.cols|length + 1}}">{{ __('No result found') }}</td>
                  </tr>
   {% endfor %}
               </tbody>
            </table>
         </form>
      </div> <!-- /.box-body -->
      <div class="box-footer">
         {{ __('From %1$d to %2$d of %3$d')|format(
            search_data.search.start + search_data.data.begin + 1,
            search_data.search.start + search_data.data.end + 1,
            search_data.data.totalcount
         ) }}
         <div class="pull-right">
            <ul class="pagination">
               <li class="paginate_button first{% if search_data.pagination.current_page == 1 %} disabled{% endif %}">
                  <a href="{{ path_for('list', {'itemtype': search_data.itemtype, 'page': 1}) }}" title="{{ __("First page") }}">
                     <i class="fa fa-fast-backward"></i>
                     <span class="sr-only">{{ __("First page") }}</span>
                  </a>
               </li>
               <li class="paginate_button previous{% if search_data.pagination.previous_page == false %} disabled{% endif %}">
                  <a href="{% if search_data.pagination.previous_page == false %}#{% else %}{{ path_for('list', {'itemtype': search_data.itemtype, 'page': search_data.pagination.previous_page})}}{% endif %}" title="{{ __("Previous page (%1$s)")|format(search_data.pagination.previous_page) }}">
                     <i class="fa fa-step-backward"></i>
                     <span class="sr-only">
                        {{ __("Previous page (%1$s)")|format(search_data.pagination.previous_page) }}
                     </span>
                  </a>
               </li>
{% for page in search_data.pagination.pages %}
               <li class="paginate_button{% if page.current is defined %} active{% endif %}">
                  <a href="{{ path_for('list', {'itemtype': search_data.itemtype, 'page': page.value}) }}" title="{{ page.title }}">
                     {% set page_content = page.label|default(page.value) %}
                     {{ page_content|raw  }}
                  </a>
               </li>
{% endfor %}
               <li class="paginate_button next{% if search_data.pagination.next_page == false %} disabled{% endif %}">
                  <a href="{{ path_for('list', {'itemtype': search_data.itemtype, 'page': search_data.pagination.next_page })}}" title="{{ __("Next page (%1$s)")|format(search_data.pagination.next_page) }}">
                     <i class="fa fa-step-forward"></i>
                     <span class="sr-only">
                        {{ __("Next page (%1$s)")|format(search_data.pagination.next_page) }}
                     </span>
                  </a>
               </li>
               <li class="paginate_button last{% if search_data.pagination.current_page == search_data.pagination.last_page %} disabled{% endif %}">
                  <a href="{{ path_for('list', {'itemtype': search_data.itemtype, 'page': search_data.pagination.last_page }) }}" title="{{ __("Last page (%1$s)")|format(search_data.pagination.last_page) }}">
                     <i class="fa fa-fast-forward"></i>
                     <span class="sr-only">{{ __("Last page (%1$s)")|format(search_data.pagination.last_page) }}</span>
                  </a>
               </li>
            </ul>
         </div><!-- /.pull-right -->
      </div><!-- /.box-footer -->
   </div> <!-- /.box-default -->
</div>
