{#
 * ---------------------------------------------------------------------
 * GLPI - Gestionnaire Libre de Parc Informatique
 * Copyright (C) 2015-2018 Teclib' and contributors.
 *
 * http://glpi-project.org
 *
 * based on GLPI - Gestionnaire Libre de Parc Informatique
 * Copyright (C) 2003-2014 by the INDEPNET Development Team.
 *
 * ---------------------------------------------------------------------
 *
 * LICENSE
 *
 * This file is part of GLPI.
 *
 * GLPI is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * GLPI is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GLPI. If not, see <http://www.gnu.org/licenses/>.
 * ---------------------------------------------------------------------
 #}
{% extends "glpi.twig" %}

{% block head %}
   {% set css_paths = css_paths|default([])|merge([
      '../lib/jquery/css/smoothness/jquery-ui-1.10.4.custom.css',
      '../css/jstree-glpi.css',
      '../lib/jqueryplugins/select2/css/select2.css',
      '../lib/jqueryplugins/qtip2/jquery.qtip.css',
      '../lib/leaflet/leaflet.css',
      '../lib/leaflet/plugins/Leaflet.markercluster/MarkerCluster.css',
      '../lib/leaflet/plugins/Leaflet.markercluster/MarkerCluster.Default.css',
      '../lib/leaflet/plugins/Leaflet.awesome-markers/leaflet.awesome-markers.css',
      '../lib/leaflet/plugins/leaflet-control-osm-geocoder/Control.OSMGeocoder.css',
      '../lib/leaflet/plugins/Leaflet.fullscreen/leaflet.fullscreen.css',
      '../css/jquery-glpi.css'
      ]) %}
   {% for css_path in css_paths %}
      <link rel="stylesheet" href="{{ CFG_GLPI.root_doc }}/{{ css_path }}" type="text/css" media="screen" />
   {% endfor %}
   {{ parent() }}
{% endblock %}

{% block header %}
   <div id='header'>
      <div id='header_top'>
         <div id='c_logo'>
            <a ref="{{ path_for('slash') }}" accesskey="1"><span class="sr-only">{{ __('Home') }}</span></a>
         </div>
         {# Preferences and logout link #}
         {#self::displayTopMenu(true);#}
         {{ block('topmenu') }}
      </div>
      {{ block('menu') }}
      {#//Main menu
      self::displayMainMenu(
         true, [
            'sector' => $sector,
            'item'   => $item,
            'option' => $option
         ]
      );#}

   </div>

   <div id='c_ssmenu2' >
      <ul>

      {#// Display item
      $mainurl = ($full === true) ? 'central' : 'helpdesk.public';#}
         <li class='breadcrumb_item'>
            <a href="{{ path_for('slash') }}{#.$CFG_GLPI["root_doc"]."/front/$mainurl.php#}" title="{{__s('Home') }}">{{ __('Home')}}</a>
         </li>

      {#if ($full === true) {
         if (isset($menu[$sector])) {
            $link = "/front/central.php";

            if (isset($menu[$sector]['default'])) {
               $link = $menu[$sector]['default'];
            }
            echo "<li class='breadcrumb_item'>".
               "<a href='".$CFG_GLPI["root_doc"].$link."' title=\"".$menu[$sector]['title']."\">".
                     $menu[$sector]['title']."</a></li>";
         }

         if (isset($menu[$sector]['content'][$item])) {
            // Title
            $with_option = false;

            if (!empty($option)
               && isset($menu[$sector]['content'][$item]['options'][$option]['title'])
               && isset($menu[$sector]['content'][$item]['options'][$option]['page'])) {

               $with_option = true;
            }

            if (isset($menu[$sector]['content'][$item]['page'])) {
               echo "<li class='breadcrumb_item'>".
                  "<a href='".$CFG_GLPI["root_doc"].$menu[$sector]['content'][$item]['page']."' ".
                        ($with_option?"":"class='here'")." title=\"".
                        $menu[$sector]['content'][$item]['title']."\" >".
                        $menu[$sector]['content'][$item]['title']."</a>".
                  "</li>";
            }

            if ($with_option) {
               echo "<li class='breadcrumb_item'>".
                  "<a href='".$CFG_GLPI["root_doc"].
                        $menu[$sector]['content'][$item]['options'][$option]['page'].
                        "' class='here' title=\"".
                        $menu[$sector]['content'][$item]['options'][$option]['title']."\" >";
               echo self::resume_name($menu[$sector]['content'][$item]['options'][$option]['title'],
                                    17);
               echo "</a></li>";
            }

            $links = [];
            // Item with Option case
            if (!empty($option)
               && isset($menu[$sector]['content'][$item]['options'][$option]['links'])
               && is_array($menu[$sector]['content'][$item]['options'][$option]['links'])) {
               $links = $menu[$sector]['content'][$item]['options'][$option]['links'];

            } else if (isset($menu[$sector]['content'][$item]['links'])
                     && is_array($menu[$sector]['content'][$item]['links'])) {
               // Without option case : only item links

               $links = $menu[$sector]['content'][$item]['links'];
            }

            // Add item
            echo "<li class='icons_block'>";
            echo "<span>";
            if (isset($links['add'])) {
               echo "<a href='{$CFG_GLPI['root_doc']}{$links['add']}' class='pointer'
                                 title='" . __s('Add') ."'><i class='fa fa-plus'></i>
                                 <span class='sr-only'>" . __('Add') . "</span></a>";
            } else {
               echo "<a href='#' class='pointer disabled' title='".__s('Add is disabled')."'>".
                  "<i class='fa fa-plus'></i>".
                  "<span class='sr-only'>" . __('Add is disabled') . "</span></a>";
            }
            echo "</span>";

            // Search Item
            echo "<span>";
            if (isset($links['search'])) {
               echo "<a href='{$CFG_GLPI['root_doc']}{$links['search']}' class='pointer'
                                 title='" . __s('Search') ."'><i class='fa fa-search'></i>
                                 <span class='sr-only'>" . __s('Search') . "</span></a>";
            } else {
               echo "<a href='#' class='pointer disabled' title='" . __s('Search is disabled')."'>".
                  "<i class='fa fa-search'></i>".
                  "<span class='sr-only'>" . __('Search is disabled') . "</span></a>";
            }
            echo "</span>";
            // Links
            if (count($links) > 0) {
               foreach ($links as $key => $val) {

                  switch ($key) {
                     case "add" :
                     case "search" :
                        break;

                     case "template" :
                        echo "<span>";
                        echo Html::image($CFG_GLPI["root_doc"] . "/pics/menu_addtemplate.png",
                                       ['alt' => __('Manage templates...'),
                                             'url' => $CFG_GLPI["root_doc"].$val]);
                        echo "</span>";
                        break;

                     case "showall" :
                        echo "<span>";
                        echo Html::image($CFG_GLPI["root_doc"] . "/pics/menu_showall.png",
                                       ['alt' => __('Show all'),
                                             'url' => $CFG_GLPI["root_doc"].$val]);
                        echo "</span>";
                        break;

                     case "summary" :
                        echo "<span>";
                        echo Html::image($CFG_GLPI["root_doc"] . "/pics/menu_show.png",
                                       ['alt' => __('Summary'),
                                             'url' => $CFG_GLPI["root_doc"].$val]);
                        echo "</span>";
                        break;

                     case "config" :
                        echo "<span>";
                        echo Html::image($CFG_GLPI["root_doc"] . "/pics/menu_config.png",
                                       ['alt' => __('Setup'),
                                             'url' => $CFG_GLPI["root_doc"].$val]);
                        echo "</span>";
                        break;

                     default :
                        echo "<span>".Html::link($key, $CFG_GLPI["root_doc"].$val)."</span>";
                        break;
                  }
               }
            }
            echo "</li>";

         } else {
            echo "<li>&nbsp;</li>";
         }
      } else {
         if (Session::haveRightsOr('ticketvalidation', TicketValidation::getValidateRights())) {
            $opt                              = [];
            $opt['reset']                     = 'reset';
            $opt['criteria'][0]['field']      = 55; // validation status
            $opt['criteria'][0]['searchtype'] = 'equals';
            $opt['criteria'][0]['value']      = TicketValidation::WAITING;
            $opt['criteria'][0]['link']       = 'AND';

            $opt['criteria'][1]['field']      = 59; // validation aprobator
            $opt['criteria'][1]['searchtype'] = 'equals';
            $opt['criteria'][1]['value']      = Session::getLoginUserID();
            $opt['criteria'][1]['link']       = 'AND';

            $url_validate = $CFG_GLPI["root_doc"]."/front/ticket.php?".
                           Toolbox::append_params($opt, '&amp;');
            $pic_validate = "<a href='$url_validate'>".
                           "<img title=\"".__s('Ticket waiting for your approval')."\" alt=\"".
                              __s('Ticket waiting for your approval')."\" src='".
                              $CFG_GLPI["root_doc"]."/pics/menu_showall.png' class='pointer'></a>";
            echo "<li class='icons_block'>$pic_validate</li>\n";
         }

         if (Session::haveRight('ticket', CREATE)
            && strpos($_SERVER['PHP_SELF'], "ticket")) {
            echo "<li class='icons_block'><a class='pointer' href='".$CFG_GLPI["root_doc"]."/front/helpdesk.public.php?create_ticket=1'title=\"".__s('Add')."\">";
            echo "<i class='fa fa-plus'></i><span class='sr-only'>".__s('Add')."</span></a></li>";
         }
      }

      // Add common items

      // Profile selector
      // check user id : header used for display messages when session logout
      if (Session::getLoginUserID()) {
         self::showProfileSelecter($CFG_GLPI["root_doc"]."/front/$mainurl.php");
      }#}
      </ul>
   </div>
{% endblock %}

{% block javascripts %}
   {% set js_paths = js_paths|default([])|merge([
         '../lib/jquery/js/jquery-ui-1.10.4.custom.js',
         '../lib/jqueryplugins/select2/js/select2.js',
         '../lib/jqueryplugins/qtip2/jquery.qtip.js',
         '../lib/jqueryplugins/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.js',
         '../lib/jqueryplugins/autogrow/jquery.autogrow-textarea.js',
         '../lib/jqueryplugins/jquery-ui-scrollable-tabs/js/jquery.mousewheel.js',
         '../lib/jqueryplugins/jquery-ui-scrollable-tabs/js/jquery.scrollabletab.js',
         '../lib/leaflet/leaflet.js',
         '../lib/spin.js/spin.min.js',
         '../lib/leaflet/plugins/leaflet.spin/leaflet.spin.min.js',
         '../lib/leaflet/plugins/Leaflet.markercluster/leaflet.markercluster.js',
         '../lib/leaflet/plugins/Leaflet.awesome-markers/leaflet.awesome-markers.min.js',
         '../lib/leaflet/plugins/leaflet-control-osm-geocoder/Control.OSMGeocoder.js',
         '../lib/leaflet/plugins/Leaflet.fullscreen/Leaflet.fullscreen.min.js',
         '../js/common.js'
      ]) %}
   {% for js_path in js_paths %}
      <script type="text/javascript" src="{{ CFG_GLPI.root_doc }}/{{ js_path }}"></script>
   {% endfor %}
   <script type="text/javascript">
      var CFG_GLPI  = {
         'url_base': '{{ CFG_GLPI.url_base|default('') }}',
         'root_doc': '{{ CFG_GLPI.root_doc }}',
      };
      {#
      if (!isset($params['value'])) {
         $value = 0;
      } else {
         $value = $params['value'];
      }
      if (!isset($params['value'])) {
         $valuename = Dropdown::EMPTY_VALUE;
      } else {
         $valuename = $params['valuename'];
      }
      $on_change = '';
      if (isset($params["on_change"])) {
         $on_change = $params["on_change"];
         unset($params["on_change"]);
      }
      $width = '80%';
      if (isset($params["width"])) {
         $width = $params["width"];
         unset($params["width"]);
      }
      unset($params['value']);
      unset($params['valuename']);

      $options = [
         'id'        => $field_id,
         'selected'  => $value
      ];
      if (!empty($params['specific_tags'])) {
         foreach ($params['specific_tags'] as $tag => $val) {
            if (is_array($val)) {
               $val = implode(' ', $val);
            }
            $options[$tag] = $val;
         }
      }

      $values = [$value => $valuename];
      $output = self::select($name, $values, $options);
      #}

      $(function() {
      $('.forSelect2').select2({
         width: '14em{#$width#}',
         minimumInputLength: 0,
         quietMillis: 100,
         dropdownAutoWidth: true,
         minimumResultsForSearch: {{ CFG_GLPI.ajax_limit_count }},
         ajax: {
            url: '{{ CFG_GLPI.root_doc }}/ajax/getDropdownValue.php{#{ path_for('slash') }#}',
            dataType: 'json',
            type: 'POST',
            data: function (params) {
               query = params;
               return {
      {#
      foreach ($params as $key => $val) {
         // Specific boolean case
         if (is_bool($val)) {
            $js .= "$key: ".($val?1:0).",\n";
         } else {
            $js .= "$key: ".json_encode($val).",\n";
         }
      }
      #}
                  itemtype: $(this).data('itemtype'),
                  display_emptychoice: 1,
                  emptylabel: '-----',
                  searchText: params.term,
                  page_limit: {{ CFG_GLPI.dropdown_max }}, // page size
                  page: params.page || 1, // page number
                  {#
condition	08eeb2573550fa16b1bea6fa21840f2089e954f0
display_emptychoice	1
emptylabel	-----
entity_restrict	0
itemtype	ITILCategory
page	1
page_limit	100
permit_select_parent	0
#}
               };
            },
            processResults: function (data, params) {
               params.page = params.page || 1;
               var more = (data.count >= {{ CFG_GLPI.dropdown_max }});

               return {
                  results: data.results,
                  pagination: {
                        more: more
                  }
               };
            }
         },
         templateResult: formatResult
      });
      {#
      if (!empty($on_change)) {
         $js .= " $('#$field_id').on('change', function(e) {".
                  stripslashes($on_change)."});";
      }#}
         $('label').on(
            'click', function(){
               var _this = $(this);
               if (_next = _this.next('.forSelect2')) {
                  _next.select2('open');
               }
            }
         );
      });
   </script>
   {{ parent() }}
{% endblock %}

{# Prefs / Logout link #}
{% block topmenu %}
   {% spaceless %}
   <div id='c_preference' >
      <ul>
         <li id='deconnexion'>
            <a href='{#{ path_for('logout') }#}' title="{{ __s('Logout') }}" class="fa fa-sign-out">
      {#if (isset($_SESSION['glpiextauth']) && $_SESSION['glpiextauth']) {
         //FIXME: Manage in logout route?
         echo "?noAUTO=1";
      }}#}
               <span class='sr-only'>{{ __('Logout') }}</span>
            </a>
         </li>
         <li id='preferences_link'>
            <a href='{#{ path_for('/user/preferences') }#}' title="{{ __s('My settings') }}" class='fa fa-cog'>
               <span class='sr-only'>{{ __('My settings') }}</span>

               {# check user id : header used for display messages when session logout #}
               {% if call_static('Session', 'getLoginUserID') and user_name is defined %}
               <span id='myname'>{{ user_name }}</span>
               {% endif %}
            </a>
         </li>

      {% if call_static('Config', 'canUpdate') %}
      {#if (Config::canUpdate()) {
         $current_mode = $_SESSION['glpi_use_mode'];
         $class = 'debug' . ($current_mode == Session::DEBUG_MODE ? 'on' : 'off');
         $title = $current_mode == Session::DEBUG_MODE ?
            __('Debug mode enabled') :
            __('Debug mode disabled');
         echo "<li id='debug_mode'>";
         echo "<a href='{$CFG_GLPI['root_doc']}/ajax/switchdebug.php' class='fa fa-bug $class'
                title='$title'>";
         echo "<span class='sr-only'>" . __('Change mode')  . "</span>";
         echo "</a>";
         echo "</li>";
      }#}
      {% endif %}

      {#/// Bookmark load
      echo "<li id='bookmark_link'>";
      Ajax::createSlidePanel(
         'showSavedSearches',
         [
            'title'     => __('Saved searches'),
            'url'       => $CFG_GLPI['root_doc'] . '/ajax/savedsearch.php?action=show',
            'icon'      => '/pics/menu_config.png',
            'icon_url'  => SavedSearch::getSearchURL(),
            'icon_txt'  => __('Manage saved searches')
         ]
      );
      echo "<a href='#' id='showSavedSearchesLink' class='fa fa-star' title=\"".
             __s('Load a bookmark'). "\">";
      echo "<span class='sr-only'>" . __('Saved searches')  . "</span>";
      echo "</a></li>";#}

         <li id='help_link'>
            <a href='{% if CFG_GLPI.central_doc_url is empty %}http://glpi-project.org/help-central{% else %}{{ CFG_GLPI.central_doc_url}}{% endif %}' target='_blank' title="{{ __s('Help') }}" class='fa fa-question'>
               <span class='sr-only'>{{ __('Help') }}</span>
            </a>
         </li>

      {#if (!GLPI_DEMO_MODE) {
         echo "<li id='language_link'><a href='".$CFG_GLPI["root_doc"].
                    "/front/preference.php?forcetab=User\$1' title=\"".
                    addslashes(Dropdown::getLanguageName($_SESSION['glpilanguage']))."\">".
                    Dropdown::getLanguageName($_SESSION['glpilanguage'])."</a></li>";
      } else {
         echo "<li id='language_link'><span>" .
            Dropdown::getLanguageName($_SESSION['glpilanguage']) . "</span></li>";
      }
#}
         <li id='c_recherche'>
{#
      if ($full === true) {
         /// Search engine
#}
      {% if CFG_GLPI.allow_search_global %}
         <form method='get' action='{{ CFG_GLPI.root_doc }}/front/search.php'>
            <span id='champRecherche'>
               <input size='15' type='text' name='globalsearch' placeholder='{{ __s('Search') }}'>
               <button type='submit' name='globalsearchglass'><i class='fa fa-search'></i></button>
            </span>
            {% include "elements/hidden.twig" with {'element': {'name': '_csrf'}} %}
         </form>
      {% endif %}
{#
         }
      }
#}
      </li>

      </ul>
   </div>
   {% endspaceless %}
{% endblock %}

{% macro menu_links(entry) %}
   <li class="pure-menu-item{% if entry.content is defined and entry.content|length %} pure-menu-has-children pure-menu-allow-hover{% endif %}">
      <a href="{#% if entry.page is defined %}{{ entry.page }}{% endif %#}" class="pure-menu-link">{{ entry.title }}</a>
   {% if entry.content is defined %}
      <ul class="pure-menu-children">
      {% for child in entry.content %}
         <li class="pure-menu-item">
            <a href="{% if child.itemtype is defined %}{{ path_for('asset', {'itemtype': child.itemtype|lower}) }}{% endif %}" class="pure-menu-link">{% if child.title is defined %}{{ child.title }}{% endif %}</a>
         </li>
      {% endfor %}
      </ul>
   {% endif %}
   </li>
{% endmacro %}

{% block menu %}
<div id="c_menu" class="pure-menu pure-menu-horizontal">
   <ul class="pure-menu-list">
   {% import _self as glpi_page %}
   {% for menu in glpi_menus %}
      {{ glpi_page.menu_links(menu) }}
   {% endfor %}
   </ul>
</div>
{% endblock %}

{% block footer %}
   {{ exectime() }}<br/>
{% endblock %}
